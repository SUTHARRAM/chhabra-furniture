openapi: 3.0.0
info:
  title: Inventory API
  description: API for managing inventory
  version: 1.0.0
servers:
  - url: https://merp.intermesh.net/api/v1
    description: Production server
paths:
  /inventory:
    get:
      summary: Get all inventory items
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
        - name: offset
          in: query
          schema:
            type: integer
            default: 0
        - name: category
          in: query
          schema:
            type: string
        - name: inStock
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: List of inventory items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InventoryItem'
    post:
      summary: Create a new inventory item
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInventoryItemRequest'
      responses:
        '201':
          description: Inventory item created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItem'
        '400':
          description: Bad request
  /inventory/{itemId}:
    get:
      summary: Get inventory item by ID
      parameters:
        - name: itemId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Inventory item details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItem'
        '404':
          description: Item not found
    put:
      summary: Update inventory item
      parameters:
        - name: itemId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInventoryItemRequest'
      responses:
        '200':
          description: Inventory item updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItem'
        '404':
          description: Item not found
    delete:
      summary: Delete inventory item
      parameters:
        - name: itemId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Item deleted successfully
        '404':
          description: Item not found
  /inventory/{itemId}/stock:
    patch:
      summary: Update stock quantity
      parameters:
        - name: itemId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStockRequest'
      responses:
        '200':
          description: Stock updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItem'
        '404':
          description: Item not found
components:
  schemas:
    InventoryItem:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        category:
          type: string
        sku:
          type: string
        price:
          type: number
          format: float
        stock:
          type: integer
        minStock:
          type: integer
        maxStock:
          type: integer
        isActive:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    CreateInventoryItemRequest:
      type: object
      required:
        - name
        - category
        - sku
        - price
        - stock
      properties:
        name:
          type: string
        description:
          type: string
        category:
          type: string
        sku:
          type: string
        price:
          type: number
          format: float
        stock:
          type: integer
        minStock:
          type: integer
        maxStock:
          type: integer
    UpdateInventoryItemRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        category:
          type: string
        price:
          type: number
          format: float
        minStock:
          type: integer
        maxStock:
          type: integer
        isActive:
          type: boolean
    UpdateStockRequest:
      type: object
      required:
        - quantity
      properties:
        quantity:
          type: integer
        operation:
          type: string
          enum: [add, subtract, set]
          default: set

